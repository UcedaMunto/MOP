# Generated by Django 5.0 on 2025-10-25 15:32

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EstadoEvento",
            fields=[
                ("id", models.SmallAutoField(primary_key=True, serialize=False)),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único del estado", max_length=16, unique=True
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Nombre del estado", max_length=32),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Estado de Evento",
                "verbose_name_plural": "Estados de Evento",
                "db_table": "estado_evento",
                "ordering": ["codigo"],
                "indexes": [
                    models.Index(
                        fields=["codigo"], name="estado_even_codigo_5f531c_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="NivelGravedad",
            fields=[
                ("id", models.SmallAutoField(primary_key=True, serialize=False)),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único del nivel", max_length=16, unique=True
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del nivel de gravedad", max_length=32
                    ),
                ),
                (
                    "orden",
                    models.SmallIntegerField(
                        help_text="Orden del nivel (1=menor, mayor número=más grave)"
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Nivel de Gravedad",
                "verbose_name_plural": "Niveles de Gravedad",
                "db_table": "nivel_gravedad",
                "ordering": ["orden"],
                "indexes": [
                    models.Index(
                        fields=["codigo"], name="nivel_grave_codigo_e08f2d_idx"
                    ),
                    models.Index(fields=["orden"], name="nivel_grave_orden_c557b6_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="TipoEvento",
            fields=[
                ("id", models.SmallAutoField(primary_key=True, serialize=False)),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único del tipo de evento",
                        max_length=32,
                        unique=True,
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del tipo de evento", max_length=64
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True, help_text="Descripción del tipo de evento"
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el tipo de evento está activo",
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Tipo de Evento",
                "verbose_name_plural": "Tipos de Evento",
                "db_table": "tipo_evento",
                "ordering": ["codigo"],
                "indexes": [
                    models.Index(
                        fields=["codigo"], name="tipo_evento_codigo_b80c1b_idx"
                    ),
                    models.Index(
                        fields=["activo"], name="tipo_evento_activo_432b5b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EventoTrafico",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "titulo",
                    models.CharField(help_text="Título del evento", max_length=140),
                ),
                (
                    "descripcion",
                    models.TextField(help_text="Descripción detallada del evento"),
                ),
                (
                    "latitud",
                    models.DecimalField(
                        decimal_places=6, help_text="Latitud del evento", max_digits=9
                    ),
                ),
                (
                    "longitud",
                    models.DecimalField(
                        decimal_places=6, help_text="Longitud del evento", max_digits=9
                    ),
                ),
                (
                    "radio_metros",
                    models.IntegerField(help_text="Radio de afectación en metros"),
                ),
                (
                    "fecha_ocurrencia",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Fecha y hora de ocurrencia del evento",
                    ),
                ),
                (
                    "fecha_reporte",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Fecha y hora del reporte",
                    ),
                ),
                (
                    "expira_en",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha de expiración del evento",
                        null=True,
                    ),
                ),
                (
                    "viaje_id_externo",
                    models.CharField(
                        blank=True,
                        help_text="ID del viaje en MS Transporte",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "viaje_sistema_origen",
                    models.CharField(
                        blank=True,
                        help_text="Sistema origen del viaje (ej: transporte-ms)",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "vehiculo_id_externo",
                    models.CharField(
                        blank=True,
                        help_text="ID del vehículo en MS Transporte",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "conductor_id_externo",
                    models.CharField(
                        blank=True,
                        help_text="ID del conductor en MS Transporte",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "correlacion_id",
                    models.UUIDField(
                        blank=True,
                        help_text="ID de correlación para trazabilidad entre servicios",
                        null=True,
                    ),
                ),
                (
                    "creado_por_id_externo",
                    models.CharField(
                        blank=True,
                        help_text="ID del usuario que creó el evento (referencia externa)",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "creado_por_username",
                    models.CharField(
                        blank=True,
                        help_text="Username del usuario que creó el evento (snapshot)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "actualizado_por_id_externo",
                    models.CharField(
                        blank=True,
                        help_text="ID del usuario que actualizó el evento (referencia externa)",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "actualizado_por_username",
                    models.CharField(
                        blank=True,
                        help_text="Username del usuario que actualizó el evento (snapshot)",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "eliminado_en",
                    models.DateTimeField(
                        blank=True, help_text="Fecha de eliminación lógica", null=True
                    ),
                ),
                (
                    "estado",
                    models.ForeignKey(
                        help_text="Estado del evento",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="eventos",
                        to="microservicios_eventos.estadoevento",
                    ),
                ),
                (
                    "gravedad",
                    models.ForeignKey(
                        help_text="Nivel de gravedad",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="eventos",
                        to="microservicios_eventos.nivelgravedad",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        help_text="Tipo de evento",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="eventos",
                        to="microservicios_eventos.tipoevento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento de Tráfico",
                "verbose_name_plural": "Eventos de Tráfico",
                "db_table": "evento_trafico",
                "ordering": ["-fecha_ocurrencia"],
            },
        ),
        migrations.CreateModel(
            name="EventoRutaAfectada",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "sistema_origen",
                    models.CharField(
                        help_text="Sistema origen de la ruta (ej: rutas-ms, SIG)",
                        max_length=32,
                    ),
                ),
                (
                    "ruta_id_externo",
                    models.CharField(
                        help_text="ID de la ruta en el sistema externo", max_length=64
                    ),
                ),
                (
                    "ruta_codigo",
                    models.CharField(
                        blank=True,
                        help_text="Código de la ruta (snapshot)",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "ruta_nombre",
                    models.CharField(
                        blank=True,
                        help_text="Nombre de la ruta (snapshot)",
                        max_length=120,
                        null=True,
                    ),
                ),
                (
                    "relevancia",
                    models.CharField(
                        choices=[
                            ("PRINCIPAL", "Principal"),
                            ("SECUNDARIA", "Secundaria"),
                        ],
                        help_text="Relevancia de la afectación",
                        max_length=16,
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "evento",
                    models.ForeignKey(
                        help_text="Evento que afecta la ruta",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rutas_afectadas",
                        to="microservicios_eventos.eventotrafico",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ruta Afectada por Evento",
                "verbose_name_plural": "Rutas Afectadas por Eventos",
                "db_table": "evento_ruta_afectada",
                "ordering": ["-creado_en"],
                "indexes": [
                    models.Index(
                        fields=["evento"], name="evento_ruta_evento__ec847f_idx"
                    ),
                    models.Index(
                        fields=["sistema_origen", "ruta_id_externo"],
                        name="evento_ruta_sistema_502bb6_idx",
                    ),
                    models.Index(
                        fields=["ruta_codigo"], name="evento_ruta_ruta_co_7b55ec_idx"
                    ),
                    models.Index(
                        fields=["relevancia"], name="evento_ruta_relevan_820be0_idx"
                    ),
                ],
                "unique_together": {("evento", "sistema_origen", "ruta_id_externo")},
            },
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(fields=["tipo"], name="evento_traf_tipo_id_8e77ff_idx"),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["gravedad"], name="evento_traf_graveda_655ff4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["estado"], name="evento_traf_estado__03c98c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["fecha_ocurrencia"], name="evento_traf_fecha_o_7b2e94_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["fecha_reporte"], name="evento_traf_fecha_r_a163fc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["latitud", "longitud"], name="evento_traf_latitud_3313c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["viaje_id_externo"], name="evento_traf_viaje_i_a297b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["vehiculo_id_externo"], name="evento_traf_vehicul_57a3f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["correlacion_id"], name="evento_traf_correla_5388a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="eventotrafico",
            index=models.Index(
                fields=["eliminado_en"], name="evento_traf_elimina_d5d5fa_idx"
            ),
        ),
    ]
