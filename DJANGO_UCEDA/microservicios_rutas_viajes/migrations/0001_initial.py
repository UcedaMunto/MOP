# Generated by Django 5.2.7 on 2025-10-25 23:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EmpresaTransporte",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre de la empresa de transporte", max_length=120
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único de la empresa",
                        max_length=32,
                        unique=True,
                    ),
                ),
                (
                    "contacto",
                    models.CharField(
                        blank=True, help_text="Persona de contacto", max_length=120
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, help_text="Teléfono de contacto", max_length=32
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True, help_text="Indica si la empresa está activa"
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Empresa de Transporte",
                "verbose_name_plural": "Empresas de Transporte",
                "db_table": "empresa_transporte",
                "ordering": ["nombre"],
                "indexes": [
                    models.Index(
                        fields=["codigo"], name="empresa_tra_codigo_00500b_idx"
                    ),
                    models.Index(
                        fields=["activo"], name="empresa_tra_activo_219b52_idx"
                    ),
                    models.Index(
                        fields=["nombre"], name="empresa_tra_nombre_62f3d0_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Autobus",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único del autobús", max_length=32, unique=True
                    ),
                ),
                (
                    "placa",
                    models.CharField(
                        help_text="Placa del autobús",
                        max_length=16,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="La placa solo puede contener letras, números y guiones",
                                regex="^[A-Za-z0-9\\-]+$",
                            )
                        ],
                    ),
                ),
                (
                    "capacidad",
                    models.PositiveIntegerField(
                        help_text="Capacidad de pasajeros",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True, help_text="Indica si el autobús está activo"
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        help_text="Empresa que opera el autobús",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="autobuses",
                        to="microservicios_rutas_viajes.empresatransporte",
                    ),
                ),
            ],
            options={
                "verbose_name": "Autobús",
                "verbose_name_plural": "Autobuses",
                "db_table": "autobus",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Piloto",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre completo del piloto", max_length=120
                    ),
                ),
                (
                    "documento",
                    models.CharField(
                        help_text="Número de documento de identidad", max_length=32
                    ),
                ),
                (
                    "licencia_numero",
                    models.CharField(
                        help_text="Número de licencia de conducir", max_length=32
                    ),
                ),
                (
                    "licencia_categoria",
                    models.CharField(
                        help_text="Categoría de la licencia", max_length=16
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, help_text="Teléfono del piloto", max_length=32
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True, help_text="Indica si el piloto está activo"
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        help_text="Empresa que emplea al piloto",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pilotos",
                        to="microservicios_rutas_viajes.empresatransporte",
                    ),
                ),
            ],
            options={
                "verbose_name": "Piloto",
                "verbose_name_plural": "Pilotos",
                "db_table": "piloto",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Ruta",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único de la ruta", max_length=32, unique=True
                    ),
                ),
                (
                    "nombre",
                    models.CharField(help_text="Nombre de la ruta", max_length=120),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, help_text="Descripción de la ruta"),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True, help_text="Indica si la ruta está activa"
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        help_text="Empresa que administra la ruta",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rutas",
                        to="microservicios_rutas_viajes.empresatransporte",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ruta",
                "verbose_name_plural": "Rutas",
                "db_table": "ruta",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Parada",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "nombre",
                    models.CharField(help_text="Nombre de la parada", max_length=120),
                ),
                (
                    "orden",
                    models.PositiveIntegerField(
                        help_text="Orden de la parada en la ruta"
                    ),
                ),
                (
                    "sentido",
                    models.CharField(
                        choices=[("IDA", "Ida"), ("VUELTA", "Vuelta")],
                        help_text="Sentido de la parada en la ruta",
                        max_length=16,
                    ),
                ),
                (
                    "latitud",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Latitud de la parada",
                        max_digits=9,
                        validators=[
                            django.core.validators.MinValueValidator(-90.0),
                            django.core.validators.MaxValueValidator(90.0),
                        ],
                    ),
                ),
                (
                    "longitud",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Longitud de la parada",
                        max_digits=9,
                        validators=[
                            django.core.validators.MinValueValidator(-180.0),
                            django.core.validators.MaxValueValidator(180.0),
                        ],
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True, help_text="Indica si la parada está activa"
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "ruta",
                    models.ForeignKey(
                        help_text="Ruta a la que pertenece la parada",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paradas",
                        to="microservicios_rutas_viajes.ruta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parada",
                "verbose_name_plural": "Paradas",
                "db_table": "parada",
                "ordering": ["ruta", "sentido", "orden"],
            },
        ),
        migrations.CreateModel(
            name="AsignacionAutobusRuta",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("fecha", models.DateField(help_text="Fecha de la asignación")),
                (
                    "hora_inicio",
                    models.TimeField(help_text="Hora de inicio programada"),
                ),
                ("hora_fin", models.TimeField(help_text="Hora de fin programada")),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PROGRAMADA", "Programada"),
                            ("EN_CURSO", "En Curso"),
                            ("FINALIZADA", "Finalizada"),
                            ("CANCELADA", "Cancelada"),
                        ],
                        default="PROGRAMADA",
                        help_text="Estado de la asignación",
                        max_length=16,
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "autobus",
                    models.ForeignKey(
                        help_text="Autobús asignado",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asignaciones",
                        to="microservicios_rutas_viajes.autobus",
                    ),
                ),
                (
                    "piloto",
                    models.ForeignKey(
                        help_text="Piloto asignado",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asignaciones",
                        to="microservicios_rutas_viajes.piloto",
                    ),
                ),
                (
                    "ruta",
                    models.ForeignKey(
                        help_text="Ruta asignada",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asignaciones",
                        to="microservicios_rutas_viajes.ruta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Asignación Autobús-Ruta",
                "verbose_name_plural": "Asignaciones Autobús-Ruta",
                "db_table": "asignacion_autobus_ruta",
                "ordering": ["fecha", "hora_inicio"],
            },
        ),
        migrations.CreateModel(
            name="RutaGeopunto",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "orden",
                    models.PositiveIntegerField(help_text="Orden del punto en la ruta"),
                ),
                (
                    "latitud",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Latitud del punto (-90.0 a 90.0)",
                        max_digits=9,
                        validators=[
                            django.core.validators.MinValueValidator(-90.0),
                            django.core.validators.MaxValueValidator(90.0),
                        ],
                    ),
                ),
                (
                    "longitud",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Longitud del punto (-180.0 a 180.0)",
                        max_digits=9,
                        validators=[
                            django.core.validators.MinValueValidator(-180.0),
                            django.core.validators.MaxValueValidator(180.0),
                        ],
                    ),
                ),
                (
                    "ruta",
                    models.ForeignKey(
                        help_text="Ruta a la que pertenece el punto",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="geopuntos",
                        to="microservicios_rutas_viajes.ruta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Punto Geográfico de Ruta",
                "verbose_name_plural": "Puntos Geográficos de Ruta",
                "db_table": "ruta_geopunto",
                "ordering": ["ruta", "orden"],
            },
        ),
        migrations.CreateModel(
            name="ViajeAutobus",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "numero_viaje",
                    models.PositiveIntegerField(
                        help_text="Número secuencial del viaje en la asignación"
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("EN_CURSO", "En Curso"),
                            ("FINALIZADO", "Finalizado"),
                            ("CANCELADO", "Cancelado"),
                        ],
                        default="EN_CURSO",
                        help_text="Estado del viaje",
                        max_length=16,
                    ),
                ),
                (
                    "inicio_en",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha y hora de inicio del viaje",
                        null=True,
                    ),
                ),
                (
                    "fin_en",
                    models.DateTimeField(
                        blank=True, help_text="Fecha y hora de fin del viaje", null=True
                    ),
                ),
                (
                    "distancia_km",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Distancia recorrida en kilómetros",
                        max_digits=8,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "duracion_min",
                    models.PositiveIntegerField(
                        blank=True, help_text="Duración del viaje en minutos", null=True
                    ),
                ),
                (
                    "velocidad_media_kmh",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Velocidad media del viaje en km/h",
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "actualizado_en",
                    models.DateTimeField(
                        auto_now=True, help_text="Fecha de última actualización"
                    ),
                ),
                (
                    "asignacion",
                    models.ForeignKey(
                        help_text="Asignación que genera el viaje",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="viajes",
                        to="microservicios_rutas_viajes.asignacionautobusruta",
                    ),
                ),
                (
                    "autobus",
                    models.ForeignKey(
                        help_text="Autobús del viaje",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="viajes",
                        to="microservicios_rutas_viajes.autobus",
                    ),
                ),
                (
                    "parada_fin",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parada de fin del viaje",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="viajes_fin",
                        to="microservicios_rutas_viajes.parada",
                    ),
                ),
                (
                    "parada_inicio",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parada de inicio del viaje",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="viajes_inicio",
                        to="microservicios_rutas_viajes.parada",
                    ),
                ),
                (
                    "piloto",
                    models.ForeignKey(
                        help_text="Piloto del viaje",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="viajes",
                        to="microservicios_rutas_viajes.piloto",
                    ),
                ),
                (
                    "ruta",
                    models.ForeignKey(
                        help_text="Ruta del viaje",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="viajes",
                        to="microservicios_rutas_viajes.ruta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Viaje de Autobús",
                "verbose_name_plural": "Viajes de Autobús",
                "db_table": "viaje_autobus",
                "ordering": ["asignacion", "numero_viaje"],
            },
        ),
        migrations.CreateModel(
            name="PosicionAutobus",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "latitud",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Latitud de la posición",
                        max_digits=9,
                        validators=[
                            django.core.validators.MinValueValidator(-90.0),
                            django.core.validators.MaxValueValidator(90.0),
                        ],
                    ),
                ),
                (
                    "longitud",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Longitud de la posición",
                        max_digits=9,
                        validators=[
                            django.core.validators.MinValueValidator(-180.0),
                            django.core.validators.MaxValueValidator(180.0),
                        ],
                    ),
                ),
                (
                    "velocidad_kmh",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Velocidad en km/h",
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "rumbo_grados",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Rumbo en grados (0-360)",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(360),
                        ],
                    ),
                ),
                (
                    "precision_m",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precisión en metros",
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "fuente",
                    models.CharField(
                        choices=[("GPS", "GPS"), ("GSM", "GSM"), ("APP", "Aplicación")],
                        default="GPS",
                        help_text="Fuente de la posición",
                        max_length=24,
                    ),
                ),
                (
                    "capturado_en",
                    models.DateTimeField(
                        help_text="Fecha y hora de captura de la posición"
                    ),
                ),
                (
                    "recibido_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Fecha y hora de recepción",
                    ),
                ),
                (
                    "creado_en",
                    models.DateTimeField(
                        default=django.utils.timezone.now, help_text="Fecha de creación"
                    ),
                ),
                (
                    "autobus",
                    models.ForeignKey(
                        help_text="Autobús de la posición",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posiciones",
                        to="microservicios_rutas_viajes.autobus",
                    ),
                ),
                (
                    "viaje",
                    models.ForeignKey(
                        help_text="Viaje al que pertenece la posición",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posiciones",
                        to="microservicios_rutas_viajes.viajeautobus",
                    ),
                ),
            ],
            options={
                "verbose_name": "Posición de Autobús",
                "verbose_name_plural": "Posiciones de Autobús",
                "db_table": "posicion_autobus",
                "ordering": ["viaje", "-capturado_en"],
            },
        ),
        migrations.AddIndex(
            model_name="autobus",
            index=models.Index(
                fields=["empresa", "activo"], name="autobus_empresa_af2493_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="autobus",
            index=models.Index(fields=["codigo"], name="autobus_codigo_63adea_idx"),
        ),
        migrations.AddIndex(
            model_name="autobus",
            index=models.Index(fields=["placa"], name="autobus_placa_4c0932_idx"),
        ),
        migrations.AddIndex(
            model_name="piloto",
            index=models.Index(
                fields=["empresa", "activo"], name="piloto_empresa_313961_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="piloto",
            index=models.Index(fields=["documento"], name="piloto_documen_d18f9b_idx"),
        ),
        migrations.AddIndex(
            model_name="piloto",
            index=models.Index(
                fields=["licencia_numero"], name="piloto_licenci_d891e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ruta",
            index=models.Index(
                fields=["empresa", "activo"], name="ruta_empresa_fefb6b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ruta",
            index=models.Index(fields=["codigo"], name="ruta_codigo_711036_idx"),
        ),
        migrations.AddIndex(
            model_name="ruta",
            index=models.Index(fields=["nombre"], name="ruta_nombre_20fd38_idx"),
        ),
        migrations.AddIndex(
            model_name="parada",
            index=models.Index(
                fields=["ruta", "sentido", "orden"], name="parada_ruta_id_bc9f8c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="parada",
            index=models.Index(
                fields=["latitud", "longitud"], name="parada_latitud_9fd4c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="parada",
            index=models.Index(fields=["activo"], name="parada_activo_ab7555_idx"),
        ),
        migrations.AddIndex(
            model_name="asignacionautobusruta",
            index=models.Index(
                fields=["autobus", "fecha"], name="asignacion__autobus_0e19a5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asignacionautobusruta",
            index=models.Index(
                fields=["ruta", "fecha"], name="asignacion__ruta_id_570874_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asignacionautobusruta",
            index=models.Index(
                fields=["piloto", "fecha"], name="asignacion__piloto__a8f074_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asignacionautobusruta",
            index=models.Index(
                fields=["fecha", "estado"], name="asignacion__fecha_9e482c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="asignacionautobusruta",
            unique_together={("autobus", "fecha", "hora_inicio")},
        ),
        migrations.AddIndex(
            model_name="rutageopunto",
            index=models.Index(
                fields=["ruta", "orden"], name="ruta_geopun_ruta_id_de1a1c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rutageopunto",
            index=models.Index(
                fields=["latitud", "longitud"], name="ruta_geopun_latitud_c3fe61_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rutageopunto",
            unique_together={("ruta", "orden")},
        ),
        migrations.AddIndex(
            model_name="viajeautobus",
            index=models.Index(
                fields=["asignacion", "numero_viaje"],
                name="viaje_autob_asignac_71f8ef_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="viajeautobus",
            index=models.Index(
                fields=["autobus", "inicio_en"], name="viaje_autob_autobus_e6ea94_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="viajeautobus",
            index=models.Index(
                fields=["ruta", "inicio_en"], name="viaje_autob_ruta_id_5f2ba8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="viajeautobus",
            index=models.Index(fields=["estado"], name="viaje_autob_estado_0f24d0_idx"),
        ),
        migrations.AddIndex(
            model_name="viajeautobus",
            index=models.Index(
                fields=["inicio_en", "fin_en"], name="viaje_autob_inicio__5ae81b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="viajeautobus",
            unique_together={("asignacion", "numero_viaje")},
        ),
        migrations.AddIndex(
            model_name="posicionautobus",
            index=models.Index(
                fields=["viaje", "capturado_en"], name="posicion_au_viaje_i_cd7bf0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="posicionautobus",
            index=models.Index(
                fields=["autobus", "capturado_en"],
                name="posicion_au_autobus_7f713a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="posicionautobus",
            index=models.Index(
                fields=["latitud", "longitud"], name="posicion_au_latitud_e788f4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="posicionautobus",
            index=models.Index(
                fields=["capturado_en"], name="posicion_au_captura_51ba03_idx"
            ),
        ),
    ]
