@startuml arquitectura_mop
!theme amiga
title Arquitectura del Sistema MOP (Ministerio de Obras Públicas)

' === DEFINICIÓN DE COMPONENTES ===

' Contenedores Docker
rectangle "Docker Network: mop_net (172.28.0.0/24)" as network {
    
    ' PostgreSQL
    database "PostgreSQL 16 + PostGIS\n172.28.0.10:5432" as postgres {
        folder "appdb" as appdb {
            package "eventos_trafico" as db_eventos
            package "rutas_viajes" as db_rutas
        }
    }
    
    ' Redis
    database "Redis 7\n172.28.0.11:6379" as redis {
        folder "Cache & Sessions" as cache
    }
    
    ' Aplicación Django Central
    rectangle "Django Central\n172.28.0.12:8000" as central {
        
        ' Microservicios
        component "Microservicio Eventos" as ms_eventos {
            interface "Events API" as api_eventos
        }
        
        component "Microservicio Rutas/Viajes" as ms_rutas {
            interface "Routes API" as api_rutas
        }
        
        ' Core Django
        component "Django Core" as django_core {
            component "Django Admin" as admin
            component "DRF (REST Framework)" as drf
            component "GeoDjango (PostGIS)" as geodjango
            component "JWT Authentication" as jwt
        }
        
        ' APIs y Documentación
        component "Swagger/OpenAPI" as swagger
        component "CORS Handler" as cors
    }
}

' === CONEXIONES EXTERNAS ===
actor "Administradores" as admin_users
actor "API Clients" as api_clients
cloud "Internet" as internet

' === CONEXIONES ===

' Usuarios externos
admin_users --> central : "HTTP/HTTPS :80/:443"
api_clients --> central : "HTTP/HTTPS :80/:443"
internet --> central : "Puerto 80/443"

' Conexiones internas
central --> postgres : "5432"
central --> redis : "6379"

' Microservicios a bases de datos
ms_eventos --> db_eventos : "PostgreSQL Connection"
ms_rutas --> db_rutas : "PostgreSQL Connection"

' Django core a servicios
django_core --> redis : "Cache & Sessions"
django_core --> postgres : "Main DB Connection"

' APIs internas
api_eventos --> ms_eventos
api_rutas --> ms_rutas
drf --> api_eventos
drf --> api_rutas

' === NOTAS ===
note top of postgres : "Base de datos principal\nPostGIS para datos geoespaciales\nBackups automáticos"

note top of redis : "Cache distribuido\nSesiones de usuario\nPersistencia activada"

note top of central : "Aplicación monolítica con\narquitectura de microservicios\nGeoDjango + PostGIS"

note bottom of network : "Red Docker personalizada\nIPs estáticas asignadas\nComunicación interna segura"

' === VOLÚMENES ===
storage "postgres_data" as vol_postgres
storage "redis_data" as vol_redis  
storage "static_files" as vol_static

postgres --> vol_postgres : "Persistencia"
redis --> vol_redis : "Persistencia"
central --> vol_static : "Archivos estáticos"

@enduml